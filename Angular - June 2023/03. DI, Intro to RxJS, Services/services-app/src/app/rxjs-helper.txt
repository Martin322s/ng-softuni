const p = new Promise((resolve, reject) => {
    console.log('from promise involved');

    setTimeout(() => {
        resolve(1200);
    }, 4000);
});

p.then((data) => console.log('promise', data));

function int(value: number) {
    return new Observable<number>(observer => {
        // observer.next(1000);
        // observer.next(1001);
        // observer.next(1002);
        let count = 0;

        const interval = setInterval(() => {
            observer.next(count++);
        }, value);

        return () => {
            clearInterval(interval);
        }
    });
}

const stream$ = int(1000).pipe(map((x) => x * 2)); 

stream$.subscribe({
    next: (x) => console.log(x),
    error: () => console.log('error'),
    complete: () => console.log('completed')
});